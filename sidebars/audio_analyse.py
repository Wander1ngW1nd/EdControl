# -*- coding: utf-8 -*-
"""
Created on Tue Sep  5 23:45:21 2023

@author: M
"""
import cv2
import streamlit as st
import os
import diarization as dz
from plotlycharts import charts

#—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Å–ø–∞–Ω–¥–µ—Ä–æ–≤ –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ, –∞—Ä–≥—É–º–µ–Ω—Ç - –∫–æ–ª–æ–Ω–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—Å–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
def default_expanders(teacher):

    with teacher.expander(":red[–§–ò–û_–¥–∞—Ç–∞_–≤—Ä–µ–º—è1.mp4]"):
        st.write("...")
    with teacher.expander(":green[–§–ò–û_–¥–∞—Ç–∞_–≤—Ä–µ–º—è1.mp4]"):
        st.write("...")
    with teacher.expander(":orange[–§–ò–û_–¥–∞—Ç–∞_–≤—Ä–µ–º—è1.mp4]"):
        st.write("...")

def count_video_length(path, name):
    
    path_to_video = os.path.join(path, name)
    cap = cv2.VideoCapture(path_to_video)
    fps = cap.get(cv2.CAP_PROP_FPS) 
    frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
    duration = frame_count/fps
    length = duration / 60  # duration in minutes
    
    return length

#view, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–∞—è –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –ø—Ä–µ–ø–æ–¥–∞
def view_side_bar(name, teacher, path):
    teacher.header("üì∏"+name)

    rating, info = teacher.columns([3,5])

    rating.header("–†–µ–π—Ç–∏–Ω–≥")
    rating.text("‚≠ê‚≠ê‚≠ê")

    info.header("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    info.text("email, phone")

    videoFile_dz = teacher.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Ç–µ–∫—Å—Ç", type='mp4',\
                                      accept_multiple_files=False)
    
    #–µ—Å–ª–∏ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –±–æ–ª—å—à–µ —ç–∫—Å–ø–∞–Ω–¥–µ—Ä–æ–≤
    if videoFile_dz is not None:
    
        #—Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –¥–∏—Ä—Ä–µ–∫—Ç–æ—Ä–∏—é
        with open(os.path.join(path, videoFile_dz.name),"wb") as f:
            f.write(videoFile_dz.getbuffer())
        videoLength = count_video_length(path, videoFile_dz.name)
        if videoLength <=3 and videoLength >= 0.01:
            with teacher.status("–û–±—Ä–∞–±–æ—Ç–∫–∞"):
                dz.path_for_audio(path,videoFile_dz.name)
                audio = './audio.wav'
                dz.dz_result(audio)
                with open('transcript.txt') as input:
                    st.text(input.read())

        else:
            teacher.error("–î–ª–∏–Ω–Ω–æ–µ –≤–∏–¥–µ–æ")
            teacher.header("–í—ã–±–æ—Ä —É—Ä–æ–∫–∞")
            default_expanders(teacher)
    #–∏–Ω–∞—á–µ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∫–æ–ª-–≤–æ —ç–∫—Å–ø–∞–Ω–¥–µ—Ä–æ–≤
    else:

        teacher.header("–í—ã–±–æ—Ä –≤–∏–¥–µ–æ")

        default_expanders(teacher)
   